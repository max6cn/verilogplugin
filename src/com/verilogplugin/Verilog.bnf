/*
 * (C) Copyright  2014 Aplus Logic Inc (http://www.apluslogicinc.com/)
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser General Public License
 * (LGPL) version 2.1 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-2.1.html
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * Contributors:
 *      XR.M
 */
{
  // psiImplUtilClass="com.verilogplugin.util.VerilogPsiImplUtil"
  parserClass="com.verilogplugin.parser.VerilogParser"
  // parserUtilClass="com.verilogplugin.parser.VerilogParserUtil"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Verilog"
  psiImplClassSuffix="Impl"
  psiPackage="com.verilogplugin.psi"
  psiImplPackage="com.verilogplugin.psi.impl"

  elementTypeHolderClass="com.verilogplugin.psi.VerilogTokenTypes"
  elementTypePrefix = ""
  elementTypeClass="com.verilogplugin.psi.VerilogElementType"
  tokenTypeClass="com.verilogplugin.psi.VerilogElementType"
  tokenTypeClass="com.verilogplugin.psi.VerilogTokenTypes"
  psiImplUtilClass="com.verilogplugin.psi.impl.VerilogPsiImplUtil"

  generateFirstCheck=50
/**
 * Tokens
 * http://hackage.haskell.org/package/verilog-0.0.2/docs/Language-Verilog-Tokens.html
 * http://hackage.haskell.org/package/verilog-0.0.2/docs/src/Language-Verilog-Parse.html
*/
  tokens = [

//      Id_simple                 = "regexp:[a-zA-Z_][a-zA-Z0-9_\$]*"
//      Id_system                 = "regexp:\$[a-zA-Z0-9_\$] [a-zA-Z0-9_\$]*"
//      Lit_number_unsigned       ="regexp:\d\+"
//      Lit_number                ="regexp:-\d\+"
//      Lit_string                = "regexp:\"[^\r\n]*\""
      ALIAS                  = "alias"
      ALWAYS                 = "always"
      ALWAYS_COMB            = "always_comb"
      ALWAYS_FF              = "always_ff"
      ALWAYS_LATCH           = "always_latch"
      AND                    = "and"
      ASSERT                 = "assert"
      ASSIGN                 = "assign"
      ASSUME                 = "assume"
      AUTOMATIC              = "automatic"
      BEFORE                 = "before"
      BEGIN                  = "begin"
      BIND                   = "bind"
      BINS                   = "bins"
      BINSOF                 = "binsof"
      BIT                    = "bit"
      BREAK                  = "break"
      BUF                    = "buf"
      BUFIF0                 = "bufif0"
      BUFIF1                 = "bufif1"
      BYTE                   = "byte"
      CASE                   = "case"
      CASEX                  = "casex"
      CASEZ                  = "casez"
      CELL                   = "cell"
      CHANDLE                = "chandle"
      CLASS                  = "class"
      CLOCKING               = "clocking"
      CMOS                   = "cmos"
      CONFIG                 = "config"
      CONST                  = "const"
      CONSTRAINT             = "constraint"
      CONTEXT                = "context"
      CONTINUE               = "continue"
      COVER                  = "cover"
      COVERGROUP             = "covergroup"
      COVERPOINT             = "coverpoint"
      CROSS                  = "cross"
      DEASSIGN               = "deassign"
      DEFAULT                = "default"
      DEFPARAM               = "defparam"
      DESIGN                 = "design"
      DISABLE                = "disable"
      DIST                   = "dist"
      DO                     = "do"
      EDGE                   = "edge"
      ELSE                   = "else"
      END                    = "end"
      ENDCASE                = "endcase"
      ENDCLASS               = "endclass"
      ENDCLOCKING            = "endclocking"
      ENDCONFIG              = "endconfig"
      ENDFUNCTION            = "endfunction"
      ENDGENERATE            = "endgenerate"
      ENDGROUP               = "endgroup"
      ENDINTERFACE           = "endinterface"
      ENDMODULE              = "endmodule"
      ENDPACKAGE             = "endpackage"
      ENDPRIMITIVE           = "endprimitive"
      ENDPROGRAM             = "endprogram"
      ENDPROPERTY            = "endproperty"
      ENDSPECIFY             = "endspecify"
      ENDSEQUENCE            = "endsequence"
      ENDTABLE               = "endtable"
      ENDTASK                = "endtask"
      ENUM                   = "enum"
      EVENT                  = "event"
      EXPECT                 = "expect"
      EXPORT                 = "export"
      EXTENDS                = "extends"
      EXTERN                 = "extern"
      FINAL                  = "final"
      FIRST_MATCH            = "first_match"
      FOR                    = "for"
      FORCE                  = "force"
      FOREACH                = "foreach"
      FOREVER                = "forever"
      FORK                   = "fork"
      FORKJOIN               = "forkjoin"
      FUNCTION               = "function"
      FUNCTION_PROTOTYPE     = "function_prototype"
      GENERATE               = "generate"
      GENVAR                 = "genvar"
      HIGHZ0                 = "highz0"
      HIGHZ1                 = "highz1"
      IF                     = "if"
      IFF                    = "iff"
      IFNONE                 = "ifnone"
      IGNORE_BINS            = "ignore_bins"
      ILLEGAL_BINS           = "illegal_bins"
      IMPORT                 = "import"
      INCDIR                 = "incdir"
      INCLUDE                = "include"
      INITIAL                = "initial"
      INOUT                  = "inout"
      INPUT                  = "input"
      INSIDE                 = "inside"
      INSTANCE               = "instance"
      INT                    = "int"
      INTEGER                = "integer"
      INTERFACE              = "interface"
      INTERSECT              = "intersect"
      JOIN                   = "join"
      JOIN_ANY               = "join_any"
      JOIN_NONE              = "join_none"
      LARGE                  = "large"
      LIBLIST                = "liblist"
      LIBRARY                = "library"
      LOCAL                  = "local"
      LOCALPARAM             = "localparam"
      LOGIC                  = "logic"
      LONGINT                = "longint"
      MACROMODULE            = "macromodule"
      MATCHES                = "matches"
      MEDIUM                 = "medium"
      MODPORT                = "modport"
      MODULE                 = "module"
      NAND                   = "nand"
      NEGEDGE                = "negedge"
      NEW                    = "new"
      NMOS                   = "nmos"
      NOR                    = "nor"
      NOSHOWCANCELLED        = "noshowcancelled"
      NOT                    = "not"
      NOTIF0                 = "notif0"
      NOTIF1                 = "notif1"
      NULL                   = "null"
      OPTION                 = "option"
      OR                     = "or"
      OUTPUT                 = "output"
      PACKAGE                = "package"
      PACKED                 = "packed"
      PARAMETER              = "parameter"
      PATHPULSE_DOLLAR       = "pathpulse_dollar"
      PMOS                   = "pmos"
      POSEDGE                = "posedge"
      PRIMITIVE              = "primitive"
      PRIORITY               = "priority"
      PROGRAM                = "program"
      PROPERTY               = "property"
      PROTECTED              = "protected"
      PULL0                  = "pull0"
      PULL1                  = "pull1"
      PULLDOWN               = "pulldown"
      PULLUP                 = "pullup"
      PULSESTYLE_ONEVENT     = "pulsestyle_onevent"
      PULSESTYLE_ONDETECT    = "pulsestyle_ondetect"
      PURE                   = "pure"
      RAND                   = "rand"
      RANDC                  = "randc"
      RANDCASE               = "randcase"
      RANDSEQUENCE           = "randsequence"
      RCMOS                  = "rcmos"
      REAL                   = "real"
      REALTIME               = "realtime"
      REF                    = "ref"
      REG                    = "reg"
      RELEASE                = "release"
      REPEAT                 = "repeat"
      RETURN                 = "return"
      RNMOS                  = "rnmos"
      RPMOS                  = "rpmos"
      RTRAN                  = "rtran"
      RTRANIF0               = "rtranif0"
      RTRANIF1               = "rtranif1"
      SCALARED               = "scalared"
      SEQUENCE               = "sequence"
      SHORTINT               = "shortint"
      SHORTREAL              = "shortreal"
      SHOWCANCELLED          = "showcancelled"
      SIGNED                 = "signed"
      SMALL                  = "small"
      SOLVE                  = "solve"
      SPECIFY                = "specify"
      SPECPARAM              = "specparam"
      STATIC                 = "static"
      STRENGTH0              = "strength0"
      STRENGTH1              = "strength1"
      STRING                 = "string"
      STRONG0                = "strong0"
      STRONG1                = "strong1"
      STRUCT                 = "struct"
      SUPER                  = "super"
      SUPPLY0                = "supply0"
      SUPPLY1                = "supply1"
      TABLE                  = "table"
      TAGGED                 = "tagged"
      TASK                   = "task"
      THIS                   = "this"
      THROUGHOUT             = "throughout"
      TIME                   = "time"
      TIMEPRECISION          = "timeprecision"
      TIMEUNIT               = "timeunit"
      TRAN                   = "tran"
      TRANIF0                = "tranif0"
      TRANIF1                = "tranif1"
      TRI                    = "tri"
      TRI0                   = "tri0"
      TRI1                   = "tri1"
      TRIAND                 = "triand"
      TRIOR                  = "trior"
      TRIREG                 = "trireg"
      TYPE                   = "type"
      TYPEDEF                = "typedef"
      TYPE_OPTION            = "type_option"
      UNION                  = "union"
      UNIQUE                 = "unique"
      UNSIGNED               = "unsigned"
      USE                    = "use"
      VAR                    = "var"
      VECTORED               = "vectored"
      VIRTUAL                = "virtual"
      VOID                   = "void"
      WAIT                   = "wait"
      WAIT_ORDER             = "wait_order"
      WAND                   = "wand"
      WEAK0                  = "weak0"
      WEAK1                  = "weak1"
      WHILE                  = "while"
      WILDCARD               = "wildcard"
      WIRE                   = "wire"
      WITH                   = "with"
      within                 = "within"
      WOR                    = "wor"
      XNOR                   = "xnor"
      XOR                    = "xor"

      PAREN_L               ="("
      PAREN_R               =")"
      BRACK_L               ="["
      BRACK_R               = "]"
      BRACE_L               = "{"
      BRACE_R               = "}"
      TILDY                 = "~"
      BANG                  = "!"
      AT                    = "@"
      POUND                 = "#"
      PERCENT               = "%"
      HAT                   = "^"
      AMP                   = "&"
      BAR                   = "|"
      ASTER                 = "*"
      DOT                   = "."
      COMMA                 = ","
      COLON                 = ":"
      SEMI                  = ";"
      EQ                    = "="
      LT                    = "<"
      GT                    = ">"
      PLUS                  = "+"
      DASH                  = "-"
      QUESTION              = "?"
      SLASH                 = "/"
      DOLLAR                = "$"
      S_QUOTE               = "'"
      TILDY_AMP             = "~&"
      TILDY_BAR             = "~|"
      TILDY_HAT             = "~^"
      HAT_TILDY             = "^~"
      EQ_EQ                 = "=="
      BANG_EQ               = "!="
      AMP_AMP               = "&&"
      BAR_BAR               = "||"
      ASTER_ASTER           = "**"
      LT_EQ                 = "<="
      GT_EQ                 = ">="
      GT_GT                 = ">>"
      LT_LT                 = "<<"
      PLUS_PLUS             = "++"
      DASH_DASH             = "--"
      PLUS_EQ               = "+="
      DASH_EQ               = "-="
      ASTER_EQ              = "*="
      SLASH_EQ              = "/="
      PERCENT_EQ            = "%="
      AMP_EQ                = "&="
      BAR_EQ                = "|="
      HAT_EQ                = "^="
      PLUS_COLON            = "+:"
      DASH_COLON            = "-:"
      COLON_COLON           = "::"
      DOT_ASTER             = ".*"
      DASH_GT               = "->"
      COLON_EQ              = ":="
      COLON_SLASH           = ":/"
      POUND_POUND           = "##"
      BRACK_L_ASTER         = "[*"
      BRACK_L_EQ            = "[="
      EQ_GT                 ="=>"
      AT_ASTER              = "@*"
      PAREN_L_ASTER         = "(*"
      ASTER_PAREN_R         = "*)"
      ASTER_GT              = "*>"
      EQ_EQ_EQ              = "==="
      BANG_EQ_EQ            = "!=="
      EQ_QUESTION_EQ        = "=?="
      BANG_QUESTION_EQ      = "!?="
      GT_GT_GT              = ">>>"
      LT_LT_LT              = "<<<"
      LT_LT_EQ              = "<<="
      GT_GT_EQ              = ">>="
      BAR_DASH_GT           = "|->"
      BAR_EQ_GT             = "|=>"
      BRACK_L_DASH_GT       = "[->"
      AT_AT_PAREN_L         = "@@("
      PAREN_L_ASTER_PAREN_R = "(*)"
      DASH_GT_GT            = "->>"
      AMP_AMP_AMP           = "&&&"
      LT_LT_LT_EQ           = "<<<="
      GT_GT_GT_EQ           = ">>>="
      ]
      // extends(".*Expression")="expression"
}

/** http://www.vhdl.org/sv-ec/annexA_bnf_3_1_final.html */
/** http://www.verilog.com/VerilogBNF.html */

verilogFile ::= source_text *
source_text	::= description *
description	::= module_body?
module_body ::= MODULE name_of_module ";" ENDMODULE {pin=3}

name_of_module	::= id
id ::= IDENTIFIER
//{mixin="com.verilogplugin.psi.impl.VerilogNamedElementImpl" implements="com.verilogplugin.psi.VerilogNamedElement"}
//
